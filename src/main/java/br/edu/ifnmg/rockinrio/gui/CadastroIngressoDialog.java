/*
 * Projeto de conclusão das disciplinas de BD e POO (Ciência da Computação/IFNMG).
 */
package br.edu.ifnmg.rockinrio.gui;

import br.edu.ifnmg.rockinrio.dao.EspectadorDao;
import br.edu.ifnmg.rockinrio.dao.IngressoDao;
import br.edu.ifnmg.rockinrio.dao.LineupDao;
import br.edu.ifnmg.rockinrio.entity.Espectador;
import br.edu.ifnmg.rockinrio.entity.Ingresso;
import br.edu.ifnmg.rockinrio.entity.Lineup;
import br.edu.ifnmg.rockinrio.helper.LocalDateHelper;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author Anderson Gomes
 */
public class CadastroIngressoDialog extends javax.swing.JDialog {

    private final GerenciamentoIngressosDialog gerenciamentoIngressos;

    private ArrayList<Espectador> espectadores;
    private ArrayList<Lineup> lineups;

    DefaultListModel model = new DefaultListModel();

    /**
     * Creates new form CadastroIngressoDialog
     */
    public CadastroIngressoDialog(
            GerenciamentoIngressosDialog gerenciamentoIngressos,
            boolean modal) {
        super(gerenciamentoIngressos, modal);
        initComponents();

        this.gerenciamentoIngressos = gerenciamentoIngressos;

        initCmbData();
        initCmbEspectador();
    }
    
        private void initCmbData() {

        lineups = LineupDao.obterTodos();
        cmbData.removeAllItems();

        for (int i = 0; i < lineups.size(); i++) {
            String data = "" + lineups.get(i).getDataLineup();
            cmbData.addItem(data);
        }
        /**
         * Mostra as bandas que irão se apresentar no dia escolhido (shows)
         * OBS: para atualizar a lista é necessário clicar no botão pesquisar
         */
        mostrarBandas(lineups.get(0).getDataLineup());

    }
       /**
        * Mostra as bandas que irão se apresentar no dia escolhido (shows)
        * @param dataLineup 
        */ 
        private void mostrarBandas(LocalDate dataLineup) {
        model.removeAllElements();
        ArrayList<String> bandas;
        bandas = LineupDao.gerarBandas(dataLineup);
        model.addAll(bandas);
    }
        
        public void initCmbEspectador() {
        espectadores = EspectadorDao.obterTodos();
        cmbEspectador.removeAllItems();
        if (espectadores != null){
                for (int i = 0; i < espectadores.size(); i++) {
                    String cpf = espectadores.get(i).getCpf();
                    String nome = espectadores.get(i).getNome();
                    cmbEspectador.addItem("CPF: " + cpf + " | Nome: " + nome);
                }
            }

    }
        /**
         * Cria um objeto do tipo Ingresso através dos campos preenchidos
         * para persistir essa instância no banco de dados
         */
        private void salvarIngresso() {

        String[] cmbSelectedItem = ((String) cmbEspectador.getSelectedItem()).split("\\|");

        int numero = IngressoDao.obterProximoNumero();
        int valor = Integer.parseInt(txtValor.getText());
        LocalDate dataLineup = LocalDate.parse((String) cmbData.getSelectedItem());
        String horaEntrada = "00:00";
        String cpfEspectador = cmbSelectedItem[0].trim().replace("CPF: ", "");
        String nomePessoa = cmbSelectedItem[1].trim().replace("Nome: ", "");

        Ingresso novoIngresso = new Ingresso(
                numero,
                valor,
                dataLineup,
                horaEntrada,
                cpfEspectador,
                dataLineup
        );
        novoIngresso.setNomeEspectador(nomePessoa);

        /**
         * Utiliza o comando Inserir para persistir o objeto recém criado no
         * banco de dados. Depois atualiza a lista de ingressos com este novo
         * Objeto.
         */
        IngressoDao.inserir(novoIngresso);
        gerenciamentoIngressos.inserirIngressoNaLista(novoIngresso);

        dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblPrincipal = new javax.swing.JLabel();
        lblEspectador = new javax.swing.JLabel();
        cmbEspectador = new javax.swing.JComboBox<>();
        btnDetalhes = new javax.swing.JButton();
        btnAdicionar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        cmbData = new javax.swing.JComboBox<>();
        btnPesquisar = new javax.swing.JButton();
        lblValor = new javax.swing.JLabel();
        lblData = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        lblBandas = new javax.swing.JLabel();
        scrLstBandas = new javax.swing.JScrollPane();
        lstBandas = new javax.swing.JList<>();
        btnSalvar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblPrincipal.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblPrincipal.setText("Cadastro novo ingresso");

        lblEspectador.setText("Espectador");

        btnDetalhes.setText("Detalhes");
        btnDetalhes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetalhesActionPerformed(evt);
            }
        });

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        lblValor.setText("Valor");

        lblData.setText("Data");

        txtValor.setText("0");

        lblBandas.setText("Bandas");

        lstBandas.setModel(model);
        scrLstBandas.setViewportView(lstBandas);

        btnSalvar.setMnemonic('s');
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblData)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 306, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(cmbData, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(btnPesquisar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(lblBandas)
                        .addGap(18, 18, 18)
                        .addComponent(scrLstBandas, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblPrincipal, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblEspectador)
                                    .addGap(18, 18, 18)
                                    .addComponent(cmbEspectador, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(btnDetalhes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnExcluir, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(100, 100, 100)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblValor)
                        .addGap(18, 18, 18)
                        .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPrincipal)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEspectador)
                    .addComponent(cmbEspectador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblValor)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionar)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir)
                    .addComponent(btnDetalhes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblBandas)
                        .addComponent(btnPesquisar)
                        .addComponent(cmbData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblData))
                    .addComponent(scrLstBandas, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(btnSalvar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDetalhesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetalhesActionPerformed
        String cpfEspectador
                = ((String) cmbEspectador.getSelectedItem())
                        .split("\\|")[0].trim().replace("CPF: ", "");

        Espectador eSelecionado = EspectadorDao.obterUm(cpfEspectador);

        /*TODO criar mensagem de erro*/
        String mensagem
                = "- Código: " + eSelecionado.getCodigo()
                + "\n- CPF: " + eSelecionado.getCpf()
                + "\n- Nome: " + eSelecionado.getNome()
                + "\n- Tipo de Pessoa: " + eSelecionado.getTipoPessoa()
                + "\n- Data de Nascimento: " + eSelecionado.getDataNascimento()
                + "\n\nEndereço:"
                + "\n- CEP: " + eSelecionado.getEndereco().getCep()
                + "\n- Bairro: " + eSelecionado.getEndereco().getBairro()
                + "\n- Rua: " + eSelecionado.getEndereco().getRua()
                + "\n- Número: " + eSelecionado.getEndereco().getNumero();

        var mensagemDialog
                = new MensagemGenericaDialog(this, "Detalhes do Espectador", "Detalhes do Espectador", mensagem);
        mensagemDialog.setLocationRelativeTo(this);
        mensagemDialog.setVisible(true);
    }//GEN-LAST:event_btnDetalhesActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed

        var cadastrarEspectadorDialog = new CadastroEspectadorDialog(this, true);
        cadastrarEspectadorDialog.setLocationRelativeTo(this);
        cadastrarEspectadorDialog.setModal(true);
        cadastrarEspectadorDialog.setVisible(true);
    }//GEN-LAST:event_btnAdicionarActionPerformed

    /**
     * Ao clicar no botão editar, pega o CPF do Menu Combo de Espectador e
     * busca essa instância no banco de dados, que terá seus dados repassados
     * para um novo Dialog para edição.
     * @param evt 
     */
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        String cpfEspectador
                = ((String) cmbEspectador.getSelectedItem())
                        .split("\\|")[0].trim().replace("CPF: ", "");

        Espectador eSelecionado = EspectadorDao.obterUm(cpfEspectador);

        var cadastrarEspectadorDialog = new CadastroEspectadorDialog(this, false,
                eSelecionado);
        cadastrarEspectadorDialog.setLocationRelativeTo(this);
        cadastrarEspectadorDialog.setModal(true);
        cadastrarEspectadorDialog.setVisible(true);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        /*Pegar a data selecionada e mostrar as Bandas desta lineup*/
        String data = (String) cmbData.getSelectedItem();
        LocalDate localDate = LocalDate.parse(data);

        mostrarBandas(localDate);
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        salvarIngresso();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        
        String cpfEspectador
                = ((String) cmbEspectador.getSelectedItem())
                        .split("\\|")[0].trim().replace("CPF: ", "");

        Espectador eSelecionado = EspectadorDao.obterUm(cpfEspectador);
        
        new EspectadorDao().excluir(eSelecionado);
        
        initCmbEspectador();
        
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnDetalhes;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cmbData;
    private javax.swing.JComboBox<String> cmbEspectador;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblBandas;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblEspectador;
    private javax.swing.JLabel lblPrincipal;
    private javax.swing.JLabel lblValor;
    private javax.swing.JList<String> lstBandas;
    private javax.swing.JScrollPane scrLstBandas;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
