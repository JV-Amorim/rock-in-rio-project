/*
 * Projeto de conclusão das disciplinas de BD e POO (Ciência da Computação/IFNMG).
 */
package br.edu.ifnmg.rockinrio.gui;


import br.edu.ifnmg.rockinrio.dao.IngressoDao;
import br.edu.ifnmg.rockinrio.entity.Ingresso;
import java.awt.event.MouseEvent;
import javax.swing.DefaultListModel;


public class GerenciamentoIngressosDialog extends javax.swing.JDialog {

    private DefaultListModel<Ingresso> lstIngressosModel;

    private int indiceIngressoSelecionado;

    public GerenciamentoIngressosDialog(PaginaInicial paginaInicial) {
        super(paginaInicial, true);
        initDados();
        initComponents();
    }
    
    private void initDados() {
        lstIngressosModel = new DefaultListModel<>();
        
        var ingressos = IngressoDao.obterTodos();
        
        lstIngressosModel.addAll(ingressos);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pppMenu = new javax.swing.JPopupMenu();
        mnuDetalhes = new javax.swing.JMenuItem();
        mnuEditar = new javax.swing.JMenuItem();
        mnuExcluir = new javax.swing.JMenuItem();
        pnlIngressos = new javax.swing.JPanel();
        lblIngressos = new javax.swing.JLabel();
        scrLstIngressos = new javax.swing.JScrollPane();
        lstIngressos = new javax.swing.JList<>();
        btnCadastrar = new javax.swing.JButton();
        retornarMenuPrincipal = new javax.swing.JLabel();
        buttonRetornarMenuPrincipal = new javax.swing.JButton();

        mnuDetalhes.setMnemonic('d');
        mnuDetalhes.setText("Detalhes");
        mnuDetalhes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuDetalhesActionPerformed(evt);
            }
        });
        pppMenu.add(mnuDetalhes);

        mnuEditar.setMnemonic('e');
        mnuEditar.setText("Editar");
        pppMenu.add(mnuEditar);

        mnuExcluir.setMnemonic('x');
        mnuExcluir.setText("Excluir");
        pppMenu.add(mnuExcluir);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Rock In Rio - Gerenciamento de Ingressos");
        setModal(true);
        setResizable(false);

        lblIngressos.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblIngressos.setText("Ingressos");

        lstIngressos.setModel(lstIngressosModel);
        lstIngressos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lstIngressosMouseReleased(evt);
            }
        });
        scrLstIngressos.setViewportView(lstIngressos);

        btnCadastrar.setText("Cadastrar");

        retornarMenuPrincipal.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        retornarMenuPrincipal.setText("Retornar ao menu principal");

        buttonRetornarMenuPrincipal.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buttonRetornarMenuPrincipal.setText("<");
        buttonRetornarMenuPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                buttonRetornarMenuPrincipalMouseReleased(evt);
            }
        });
        buttonRetornarMenuPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRetornarMenuPrincipalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlIngressosLayout = new javax.swing.GroupLayout(pnlIngressos);
        pnlIngressos.setLayout(pnlIngressosLayout);
        pnlIngressosLayout.setHorizontalGroup(
            pnlIngressosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrLstIngressos, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
            .addGroup(pnlIngressosLayout.createSequentialGroup()
                .addComponent(buttonRetornarMenuPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(retornarMenuPrincipal)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlIngressosLayout.createSequentialGroup()
                .addGroup(pnlIngressosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlIngressosLayout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(lblIngressos))
                    .addGroup(pnlIngressosLayout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlIngressosLayout.setVerticalGroup(
            pnlIngressosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIngressosLayout.createSequentialGroup()
                .addGroup(pnlIngressosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonRetornarMenuPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retornarMenuPrincipal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblIngressos)
                .addGap(18, 18, 18)
                .addComponent(scrLstIngressos, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(btnCadastrar))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlIngressos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlIngressos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuDetalhesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuDetalhesActionPerformed
        Ingresso ingressoSelecionado = lstIngressos.getSelectedValue();
        
        if (ingressoSelecionado == null) {
            var mensagemErroDialog = new MensagemErroDialog(this, "Não foi possível realizar a ação.");
            mensagemErroDialog.setLocationRelativeTo(this);
            mensagemErroDialog.setVisible(true);
        }
        else {
            
            String mensagem =
                "- Número: " + ingressoSelecionado.getNumero() +
                "\n- Valor do ingresso : " + ingressoSelecionado.getValor() +
                "\n- Data da line-up: " + ingressoSelecionado.getPertenceDataLineup() +
                "\n- Hora de entrada do ingresso: " + ingressoSelecionado.getHoraEntrada() +
                "\n- Nome do espectador: " + ingressoSelecionado.getNomeEspectador() +
                "\n- CPF do espectador: " + ingressoSelecionado.getCpfEspectador();
            
            var mensagemDialog =
                new MensagemGenericaDialog(this, "Detalhes da Ocorrência", "Detalhes da Ocorrência", mensagem);
            mensagemDialog.setLocationRelativeTo(this);
            mensagemDialog.setVisible(true);
        }
    }//GEN-LAST:event_mnuDetalhesActionPerformed

    private void lstIngressosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstIngressosMouseReleased
                if (evt.getButton() == MouseEvent.BUTTON3 && lstIngressos.getModel().getSize() > 0) {
            indiceIngressoSelecionado = lstIngressos.locationToIndex(evt.getPoint());
            lstIngressos.setSelectedIndex(indiceIngressoSelecionado);
            pppMenu.show(lstIngressos, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_lstIngressosMouseReleased

    private void buttonRetornarMenuPrincipalMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonRetornarMenuPrincipalMouseReleased
        dispose();
    }//GEN-LAST:event_buttonRetornarMenuPrincipalMouseReleased

    private void buttonRetornarMenuPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRetornarMenuPrincipalActionPerformed

    }//GEN-LAST:event_buttonRetornarMenuPrincipalActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton buttonRetornarMenuPrincipal;
    private javax.swing.JLabel lblIngressos;
    private javax.swing.JList<Ingresso> lstIngressos;
    private javax.swing.JMenuItem mnuDetalhes;
    private javax.swing.JMenuItem mnuEditar;
    private javax.swing.JMenuItem mnuExcluir;
    private javax.swing.JPanel pnlIngressos;
    private javax.swing.JPopupMenu pppMenu;
    private javax.swing.JLabel retornarMenuPrincipal;
    private javax.swing.JScrollPane scrLstIngressos;
    // End of variables declaration//GEN-END:variables
}
