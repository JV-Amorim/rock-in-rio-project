package br.edu.ifnmg.rockinrio.gui;

import br.edu.ifnmg.rockinrio.entity.Tarefa;
import br.edu.ifnmg.rockinrio.dao.TarefaDao;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 * Janela para inclusão, exclusão e edição de tarefas
 */
public class CadastroTarefa extends javax.swing.JFrame {

    /**
     * Modelo para manutenção de dados a serem apresentado na listagem da
     * interface gráfica.
     */
    private DefaultListModel<Tarefa> lstTarefasModel;

    /**
     * Retém o índice da tarefa selecionada para referências de processamentos
     * entre vários métodos.
     */
    private int indiceTarefaSelecionada;

    /**
     * Inicializar elementos da nova janela.
     */
    public CadastroTarefa() {
        lstTarefasModel = new DefaultListModel<>();
        List<Tarefa> tarefas = new TarefaDao().localizarTodos();
        lstTarefasModel.addAll(tarefas);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popUpTarefas = new javax.swing.JPopupMenu();
        mnuEditar = new javax.swing.JMenuItem();
        mnuExcluir = new javax.swing.JMenuItem();
        pnlPainel = new javax.swing.JPanel();
        lblDescricao = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        chkConcluida = new javax.swing.JCheckBox();
        btnSalvar = new javax.swing.JButton();
        scrlLstTarefas = new javax.swing.JScrollPane();
        lstTarefas = new javax.swing.JList<>();

        mnuEditar.setMnemonic('e');
        mnuEditar.setText("Editar");
        mnuEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEditarActionPerformed(evt);
            }
        });
        popUpTarefas.add(mnuEditar);

        mnuExcluir.setMnemonic('x');
        mnuExcluir.setText("Excluir");
        mnuExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExcluirActionPerformed(evt);
            }
        });
        popUpTarefas.add(mnuExcluir);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tarefas");
        setResizable(false);

        lblDescricao.setText("Descrição");

        txtDescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescricaoActionPerformed(evt);
            }
        });

        chkConcluida.setText("Concluída");

        btnSalvar.setText("Salvar");
        btnSalvar.setPreferredSize(new java.awt.Dimension(96, 31));
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        lstTarefas.setModel(lstTarefasModel);
        lstTarefas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstTarefasMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lstTarefasMouseReleased(evt);
            }
        });
        scrlLstTarefas.setViewportView(lstTarefas);

        javax.swing.GroupLayout pnlPainelLayout = new javax.swing.GroupLayout(pnlPainel);
        pnlPainel.setLayout(pnlPainelLayout);
        pnlPainelLayout.setHorizontalGroup(
            pnlPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPainelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scrlLstTarefas)
                    .addGroup(pnlPainelLayout.createSequentialGroup()
                        .addComponent(lblDescricao)
                        .addGap(8, 8, 8)
                        .addGroup(pnlPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPainelLayout.createSequentialGroup()
                                .addComponent(chkConcluida)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 344, Short.MAX_VALUE)
                                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtDescricao))))
                .addContainerGap())
        );
        pnlPainelLayout.setVerticalGroup(
            pnlPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPainelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescricao))
                .addGap(18, 18, 18)
                .addGroup(pnlPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkConcluida)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrlLstTarefas, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPainel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPainel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Resposta ao clique (ou <ENTER> ou foco+<SPACE>) sobre o botão "Salvar"
     * 
     * @param evt Evento capturado
     */
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        Tarefa tarefa = new Tarefa();
        tarefa.setDescricao(txtDescricao.getText());
        tarefa.setConcluida(chkConcluida.isSelected());

        Integer id = new TarefaDao().salvar(tarefa);
        tarefa.setId(id);
        lstTarefasModel.addElement(tarefa);
        limparCampos();
    }//GEN-LAST:event_btnSalvarActionPerformed

    /**
     * Resposta ao duplo-clique sobre a listagem de tarefas.
     * 
     * @param evt Evento capturado
     */
    private void lstTarefasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstTarefasMouseClicked
        if (evt.getClickCount() == 2) {
            System.out.println("Tarefa selecionada: " + lstTarefas.getSelectedValue());
        }
    }//GEN-LAST:event_lstTarefasMouseClicked

    /**
     * Resposta ao clique com botão direito sobre elementos da listagem de tarefas.
     * 
     * @param evt Evento capturado
     */
    private void lstTarefasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstTarefasMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON3
		&& lstTarefas.getModel().getSize() > 0) {
            indiceTarefaSelecionada = lstTarefas.locationToIndex(evt.getPoint());
            lstTarefas.setSelectedIndex(indiceTarefaSelecionada);
            popUpTarefas.show(lstTarefas, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_lstTarefasMouseReleased

    /**
     * Resposta ao clique sobre a opção "Editar" do menu de contexto.
     * 
     * @param evt Evento capturado
     */
    private void mnuEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEditarActionPerformed
        EdicaoTarefa edicaoTarefa = new EdicaoTarefa(lstTarefas.getSelectedValue(), this, true);
        edicaoTarefa.setLocationRelativeTo(this);
        edicaoTarefa.setVisible(true);
    }//GEN-LAST:event_mnuEditarActionPerformed

    /**
     * Resposta ao clique sobre a opção "Excluir" do menu de contexto.
     * 
     * @param evt Evento capturado
     */
    private void mnuExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExcluirActionPerformed
        new TarefaDao().excluir(lstTarefasModel.get(indiceTarefaSelecionada));
        lstTarefasModel.remove(lstTarefas.getSelectedIndex());
    }//GEN-LAST:event_mnuExcluirActionPerformed

    /**
     * Resposta ao pressionamento do <ENTER> no campo "Descrição".
     * 
     * @param evt Evento capturado
     */
    private void txtDescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescricaoActionPerformed
        btnSalvarActionPerformed(evt);
    }//GEN-LAST:event_txtDescricaoActionPerformed

    /**
     * Execução do projeto.
     * 
     * @param args Argumentos da linha de comando
     */
    public static void main(String args[]) {

        // Uso de arquivo de propriedades para recuperar dados do banco 
//        try (InputStream in = CadastroTarefa.class.getResourceAsStream("/bd.properties")) {
//            Properties p = new Properties();
//            p.load(in);
//            System.out.println(p.getProperty("url"));
//            System.out.println(p.getProperty("user"));
//            System.out.println(p.getProperty("password"));
//        } catch (Exception ex) {
//            ex.printStackTrace();
//        }

        // Altera o tema do programa, mas é preciso descomentar as linhas.
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CadastroTarefa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CadastroTarefa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CadastroTarefa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CadastroTarefa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroTarefa().setVisible(true);
            }
        });
    }

    /**
     * Restaura estado inicial dos campos do formulário.
     */
    private void limparCampos() {
        txtDescricao.setText(null);
        chkConcluida.setSelected(false);
        txtDescricao.requestFocus();
    }

    /**
     * Permite a atualização de uma tarefa que foi editada em outra janela.
     * 
     * @param tarefa A ser acrescentada à listagem de tarefas.
     */
    void atualizarModelo(Tarefa tarefa) {
        lstTarefasModel.set(indiceTarefaSelecionada, tarefa);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalvar;
    private javax.swing.JCheckBox chkConcluida;
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JList<Tarefa> lstTarefas;
    private javax.swing.JMenuItem mnuEditar;
    private javax.swing.JMenuItem mnuExcluir;
    private javax.swing.JPanel pnlPainel;
    private javax.swing.JPopupMenu popUpTarefas;
    private javax.swing.JScrollPane scrlLstTarefas;
    private javax.swing.JTextField txtDescricao;
    // End of variables declaration//GEN-END:variables
}
